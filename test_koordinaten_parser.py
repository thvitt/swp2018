from koordinaten_parser import get_coordinate_file_dict
import pytest


target_dict = {'0001': {'r0': '1,1 1221,1 1221,1748 1,1748', 'r0_012': '338,930 751,930 751,960 338,960', 'r0_020': '336,1338 739,1338 739,1370 336,1370', 'r0_007': '286,887 320,887 320,915 286,915', 'r0_006': '281,665 742,665 742,715 281,715', 'r0_019': '285,1296 773,1296 773,1326 285,1326', 'r0_009': '340,768 799,768 799,798 340,798', 'r0_008': '340,725 777,725 777,753 340,753', 'r0_016': '336,1135 740,1135 740,1166 336,1166', 'r0_011': '339,887 670,887 670,918 339,918', 'r0_022': '337,1424 763,1424 763,1452 337,1452', 'r0_017': '336,1174 744,1174 744,1208 336,1208', 'r0_014': '339,1015 788,1015 788,1046 339,1046', 'r0_005': '418,586 717,586 717,622 418,622', 'r0_001': '454,109 656,109 656,135 454,135', 'r0_003': '395,185 719,185 719,229 395,229', 'r0_004': '403,229 654,229 654,282 403,282', 'r0_015': '292,1092 734,1092 734,1123 292,1123', 'r0_002': '399,135 666,135 666,185 399,185', 'r0_018': '338,1220 813,1220 813,1256 338,1256', 'r0_021': '316,1381 798,1381 798,1412 316,1412', 'r0_013': '338,973 710,973 710,1002 338,1002', 'r0_010': '340,810 785,810 785,841 340,841', 'r0_023': '750,1465 926,1465 926,1484 750,1484'}, '0002': {'r0': '1,1 1221,1 1221,1748 1,1748', 'r0_012': '437,665 850,665 850,696 437,696', 'r0_027': '388,1402 884,1402 884,1434 388,1434', 'r0_029': '440,1487 851,1487 851,1516 440,1516', 'r0_028': '438,1445 938,1445 938,1477 438,1477', 'r0_020': '437,1005 811,1005 811,1035 437,1035', 'r0_007': '439,452 761,452 761,482 439,482', 'r0_006': '438,409 752,409 752,439 438,439', 'r0_019': '436,962 832,962 832,994 436,994', 'r0_009': '387,537 779,537 779,568 387,568', 'r0_026': '438,1361 848,1361 848,1391 438,1391', 'r0_024': '439,1275 875,1275 875,1306 439,1306', 'r0_008': '439,495 732,495 732,524 439,524', 'r0_016': '436,835 861,835 861,867 436,867', 'r0_011': '436,622 778,622 778,652 436,652', 'r0_022': '802,1046 969,1046 969,1064 802,1064', 'r0_017': '433,879 733,879 733,909 433,909', 'r0_014': '437,751 774,751 774,786 437,786', 'r0_005': '439,366 747,366 747,396 439,396', 'r0_001': '568,140 722,140 722,162 568,162', 'r0_003': '388,265 776,265 776,315 388,315', 'r0_004': '438,323 704,323 704,353 438,353', 'r0_015': '385,793 858,793 858,825 385,825', 'r0_002': '530,197 893,197 893,240 530,240', 'r0_018': '436,921 773,921 773,952 436,952', 'r0_021': '538,1162 747,1162 747,1197 538,1197', 'r0_013': '436,708 806,708 806,739 436,739', 'r0_025': '440,1319 860,1319 860,1349 440,1349', 'r0_010': '388,580 823,580 823,610 388,610', 'r0_023': '387,1215 816,1215 816,1263 387,1263', 'r0_030': '439,1528 836,1528 836,1560 439,1560'}, '0003': {'r0': '1,1 1221,1 1221,1748 1,1748', 'r0_012': '378,644 763,644 763,673 378,673', 'r0_027': '782,1238 946,1238 946,1259 782,1259', 'r0_029': '366,1453 811,1453 811,1482 366,1482', 'r0_031': '363,1537 766,1537 766,1567 363,1567', 'r0_028': '320,1393 788,1393 788,1440 320,1440', 'r0_020': '375,984 820,984 820,1014 375,1014', 'r0_007': '379,430 832,430 832,461 379,461', 'r0_006': '327,387 823,387 823,418 327,418', 'r0_019': '375,942 803,942 803,972 375,972', 'r0_009': '378,516 865,516 865,546 378,546', 'r0_026': '505,1348 648,1348 648,1384 505,1384', 'r0_024': '373,1155 875,1155 875,1185 373,1185', 'r0_008': '378,473 887,473 887,504 378,504', 'r0_016': '377,813 888,813 888,844 377,844', 'r0_011': '379,600 844,600 844,630 379,630', 'r0_022': '322,1069 756,1069 756,1099 322,1099', 'r0_017': '378,856 813,856 813,886 378,886', 'r0_014': '325,728 763,728 763,758 325,758', 'r0_005': '380,344 858,344 858,375 380,375', 'r0_001': '511,152 661,152 661,173 511,173', 'r0_003': '380,258 810,258 810,289 380,289', 'r0_004': '381,301 804,301 804,332 381,332', 'r0_015': '377,771 858,771 858,801 377,801', 'r0_002': '329,215 775,215 775,246 329,246', 'r0_018': '325,897 786,897 786,929 325,929', 'r0_021': '375,1027 820,1027 820,1057 375,1057', 'r0_013': '379,686 859,686 859,716 379,716', 'r0_025': '372,1198 811,1198 811,1227 372,1227', 'r0_010': '326,558 803,558 803,588 326,588', 'r0_023': '372,1112 786,1112 786,1142 372,1142', 'r0_030': '364,1493 882,1493 882,1526 364,1526'}}
target_dict2 = {'0004': {'r0': '1,1 1221,1 1221,1748 1,1748', 'r0_012': '396,628 837,628 837,658 396,658', 'r0_027': '448,1446 913,1446 913,1477 448,1477', 'r0_029': '449,1530 935,1530 935,1568 449,1568', 'r0_028': '451,1488 922,1488 922,1519 451,1519', 'r0_020': '394,967 957,967 957,998 394,998', 'r0_007': '398,414 777,414 777,445 398,445', 'r0_006': '342,372 837,372 837,402 342,402', 'r0_019': '395,925 833,925 833,956 395,956', 'r0_009': '398,500 901,500 901,530 398,530', 'r0_026': '449,1405 797,1405 797,1435 449,1435', 'r0_024': '409,1301 797,1301 797,1349 409,1349', 'r0_008': '399,457 895,457 895,488 399,488', 'r0_016': '393,798 858,798 858,828 393,828', 'r0_011': '397,586 725,586 725,615 397,615', 'r0_022': '860,1061 1012,1061 1012,1082 860,1082', 'r0_017': '395,840 836,840 836,871 395,871', 'r0_014': '340,712 804,712 804,743 340,743', 'r0_005': '399,329 798,329 798,360 399,360', 'r0_001': '565,134 719,134 719,158 565,158', 'r0_003': '398,244 822,244 822,274 398,274', 'r0_004': '398,287 888,287 888,317 398,317', 'r0_015': '393,754 843,754 843,785 393,785', 'r0_002': '399,202 878,202 878,231 399,231', 'r0_018': '395,881 859,881 859,914 395,914', 'r0_021': '394,1011 791,1011 791,1040 394,1040', 'r0_013': '396,671 841,671 841,701 396,701', 'r0_025': '448,1362 898,1362 898,1391 448,1391', 'r0_010': '396,542 815,542 815,572 396,572', 'r0_023': '405,1230 874,1230 874,1266 405,1266'}, '0005': {'r0': '1,1 1221,1 1221,1748 1,1748', 'r0_012': '297,625 693,625 693,650 297,650', 'r0_027': '297,1438 795,1438 795,1470 297,1470', 'r0_029': '299,1524 891,1524 891,1554 299,1554', 'r0_028': '298,1481 869,1481 869,1512 298,1512', 'r0_020': '600,978 899,978 899,997 600,997', 'r0_007': '348,410 778,410 778,440 348,440', 'r0_006': '347,367 789,367 789,391 347,391', 'r0_019': '348,925 734,925 734,956 348,956', 'r0_009': '347,494 799,494 799,527 347,527', 'r0_026': '246,1395 833,1395 833,1427 246,1427', 'r0_024': '299,1311 872,1311 872,1341 299,1341', 'r0_008': '348,452 777,452 777,484 348,484', 'r0_016': '347,796 764,796 764,827 347,827', 'r0_011': '349,582 800,582 800,614 349,614', 'r0_022': '253,1207 875,1207 875,1256 253,1256', 'r0_017': '347,839 701,839 701,869 347,869', 'r0_014': '347,710 762,710 762,741 347,741', 'r0_005': '346,324 819,324 819,355 346,355', 'r0_001': '493,129 644,129 644,151 493,151', 'r0_003': '349,238 805,238 805,269 349,269', 'r0_004': '298,280 698,280 698,311 298,311', 'r0_015': '347,753 802,753 802,783 347,783', 'r0_002': '348,195 815,195 815,226 348,226', 'r0_018': '347,883 744,883 744,913 347,913', 'r0_021': '374,1135 770,1135 770,1173 374,1173', 'r0_013': '348,668 697,668 697,695 348,695', 'r0_025': '298,1353 942,1353 942,1384 298,1384', 'r0_010': '348,539 759,539 759,570 348,570', 'r0_023': '297,1268 945,1268 945,1298 297,1298'}, '0006': {'r0': '1,1 1221,1 1221,1748 1,1748', 'r0_012': '396,730 752,730 752,760 396,760', 'r0_027': '450,1456 868,1456 868,1487 450,1487', 'r0_029': '452,1539 869,1539 869,1571 452,1571', 'r0_028': '451,1498 842,1498 842,1529 451,1529', 'r0_020': '483,1175 835,1175 835,1212 483,1212', 'r0_007': '884,380 1024,380 1024,401 884,401', 'r0_006': '597,488 713,488 713,523 597,523', 'r0_019': '448,1028 761,1028 761,1060 448,1060', 'r0_009': '446,597 1029,597 1029,632 446,632', 'r0_026': '398,1413 756,1413 756,1445 398,1445', 'r0_024': '865,1070 1026,1070 1026,1092 865,1092', 'r0_008': '392,543 1037,543 1037,597 392,597', 'r0_016': '394,899 820,899 820,931 394,931', 'r0_011': '447,687 827,687 827,718 447,718', 'r0_022': '451,1286 827,1286 827,1313 451,1313', 'r0_017': '445,943 800,943 800,973 445,973', 'r0_014': '445,815 815,815 815,846 445,846', 'r0_005': '382,340 964,340 964,371 382,371', 'r0_001': '582,144 732,144 732,168 582,168', 'r0_003': '381,254 907,254 907,286 381,286', 'r0_004': '382,296 966,296 966,328 382,328', 'r0_015': '446,858 813,858 813,888 446,888', 'r0_002': '330,211 841,211 841,243 330,243', 'r0_018': '447,986 889,986 889,1016 447,1016', 'r0_021': '401,1228 803,1228 803,1277 401,1277', 'r0_013': '445,772 804,772 804,803 445,803', 'r0_025': '451,1371 919,1371 919,1402 451,1402', 'r0_010': '444,644 822,644 822,674 444,674', 'r0_023': '452,1327 858,1327 858,1359 452,1359'}}



test_path = r"D:\informatik_programme\software_projekte\swp2018\tests\testcorpora\testcorpus"
test_path2 = r"D:\informatik_programme\software_projekte\swp2018\tests\testcorpora\testcorpus2"

def get_target_dict(path):
    return get_coordinate_file_dict(path)

@pytest.fixture(params=[test_path, test_path2])
def get_path(request):
    return request.param



def test_path(get_path):
    assert get_coordinate_file_dict(get_path) == get_target_dict(get_path)

def test_target_dict(get_path):
    assert get_coordinate_file_dict(get_path) == target_dict or target_dict2


def test_nonexistent_path():
    assert get_coordinate_file_dict("Hallo") == {}

def test_tuple_dict(get_path):
    assert get_coordinate_file_dict(get_path) == tuple(target_dict) and tuple(target_dict2)

def test_type():
    with pytest.raises(TypeError):
        #parameter input: int, float
        get_coordinate_file_dict(1) == {}
        get_coordinate_file_dict(1) == target_dict
        get_coordinate_file_dict(0.1) == {}
        get_coordinate_file_dict(0.1) == target_dict

        #parameter input: string-, int-, float-list
        get_coordinate_file_dict(["a", "b", "c"]) == {}
        get_coordinate_file_dict(["a", "b", "c"]) == target_dict
        get_coordinate_file_dict([1, 2, 3]) == {}
        get_coordinate_file_dict([1, 2, 3]) == target_dict
        get_coordinate_file_dict([0.1, 0.2, 0.3]) == {}
        get_coordinate_file_dict([0.1, 0.2, 0.3]) == target_dict

        #output: list, string, int, float, tuple
        get_coordinate_file_dict(path) == list(target_dict)
        get_coordinate_file_dict(path) == str(target_dict)
        get_coordinate_file_dict(path) == int(target_dict)
        get_coordinate_file_dict(path) == float(target_dict)
        get_coordinate_file_dict(path) == tuple(target_dict)


